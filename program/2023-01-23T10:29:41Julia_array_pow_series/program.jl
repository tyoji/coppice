
##### ##### ##### ##### ##### ##### ##### ##### ##### #####
#
# ある配列の偶数番目を順序を変えずに取り出し、その後ろに奇数番目を並べる関数を作る
# 
# 問題 1
# 偶数番目だけ取り出す関数と奇数番目だか取り出す関数を作れ。
#
# 問題 2
# 配列を順序の入れ替え偶数番目を並べた後に奇数番目を並べる関数 shuffle を作れ
#
# 問題 3
# 関数 shuffle の動作を 配列 [1,2,3,4,5,6,7,8] を処理することで確認せよ
#
# 問題 4
# 配列 [1,2,3,4,5,6,7,8] に関数 shuffle を繰り返し行った場合、
# 何度目に元の配列に戻るか確認せよ
#

##### ##### ##### ##### 問題 1 ##### ##### ##### #####
# 関数定義 thin_down
# 第1引数は配列、第2引数は自然数
# arr,c が引数なら 配列arrのc番目から一つ飛ばしで配列を作る
# 奇数番目だけ取り出すならc=1、偶数番目だけ取り出すならc=2とする
function thin_down(arr,c)
    return arr[c:2:end]
end

##### ##### ##### ##### 問題 2 ##### ##### ##### #####
# 関数定義 shuffle
# 引数に配列をとると偶数番目の配列を取り出した後奇数番目を取り出す
function shuffle(arr)
    return [arr[2:2:end];arr[1:2:end]]
end

##### ##### ##### ##### 問題 3 ##### ##### ##### #####
# shuffle関数の出力テスト
println("### 問題 3 の出力 ###")
println("[1,2,3,4,5,6,7,8] ->", shuffle([1,2,3,4,5,6,7,8]) )

##### ##### ##### ##### 問題 4 ##### ##### ##### #####
println("### 問題 4 の出力 ###")
A=[1,2,3,4,5,6,7,8]
println("0回目 ", A)
println("1回目 ", shuffle(A) )
println("2回目 ", shuffle(shuffle(A)) )
println("3回目 ", shuffle(shuffle(shuffle(A))) )
println("4回目 ", shuffle(shuffle(shuffle(shuffle(A)))) )
println("5回目 ", shuffle(shuffle(shuffle(shuffle(shuffle(A))))) )
println("6回目 ", shuffle(shuffle(shuffle(shuffle(shuffle(shuffle(A)))))) )

##### ##### ##### ##### 以上 ##### ##### ##### #####




##### ##### ##### ##### ##### ##### ##### ##### ##### #####
#
# ラマヌジャンの円周率の公式を用いて円周率の計算を行う
# 1/pi = sum_{k=0}^{infty} ( (2k)C(k) )^3 * (42k+5)/2^{12k+4}
# 
# 問題 1
# 上記式の第n項までを計算するプログラムを作成せよ
#
# 問題 2
# 上記プログラムを利用し円周率を小数点以下第10位まで計算せよ
# pi = 3. 14159 26536 89793
#


##### ##### ##### ##### 問題 1 ##### ##### ##### #####
# 関数定義 calc_pi
# 第1引数は円周率の公式の計算する項数
# 
function calc_pi(n)
    value = 0.0         # 計算結果用変数
    for k in 0:n
        a = binomial(big(2*k),big(k))   # 組合せ部分
        b = 42*big(k)+5                 # 分子部分
        c = 2^(12*big(k)+4)             # 分母部分
        #println("a= ", a, " b= ", b, " c= ", c) # 確認用
        d = big(a^3*b/c)
        value +=  big(d)
    end
    return value
end

##### ##### ##### ##### 問題 2 ##### ##### ##### #####
# calc_piの結果の逆数がpiの近似値となる
#
v=calc_pi(6)
println("1/pi = ", v)
println("円周率の近似計算")
println(1/v)

println("-_----_----_----_----_ 以下、円周率の表示")
println(big(pi))




##### ##### ##### ##### テストデータ ##### ##### ##### #####
# println(2^(1+2))  # 指数
# println(binomial(5,3))    # 組み合わせ
# println(factorial(5)) # 階乗

